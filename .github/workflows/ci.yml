name: CI/CD

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  unit-tests:
    name: Unit tests + JaCoCo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Make mvnw executable
        run: chmod +x mvnw

      - name: Run unit tests + JaCoCo report
        run: ./mvnw -B test jacoco:report

      - name: Upload JaCoCo HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/**
          if-no-files-found: warn

      - name: Upload surefire reports (JUnit)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports/**
          if-no-files-found: warn

  acceptance:
    name: Karate acceptance tests
    needs: unit-tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Make mvnw executable
        run: chmod +x mvnw

      - name: Start Spring Boot (no tests)
        run: |
          ./mvnw -q -DskipTests spring-boot:run &
          echo "Waiting for app to be UP..."
          for i in {1..60}; do
            if curl -fsS http://localhost:8080/actuator/health | grep -q '"status":"UP"'; then
              echo "App is UP"; exit 0
            fi
            sleep 2
          done
          echo "App did not start in time"; exit 1

      - name: Verify app is UP
        run: curl -fsS http://localhost:8080/actuator/health | grep '"status":"UP"'

      - name: Run Karate acceptance tests
        run: ./mvnw -B -Pacceptance test

      - name: Upload Karate report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: karate-report
          path: target/karate-reports/**
          if-no-files-found: warn

      - name: Stop app
        if: always()
        run: |
          pkill -f 'org.springframework.boot.loader.launch.JarLauncher' || true
          pkill -f 'spring-boot' || true
          pkill -f 'api-meli' || true

  pit:
    name: PIT Mutation Testing
    needs: acceptance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Make mvnw executable
        run: chmod +x mvnw

      # Compila clases y test-classes (sin ejecutar tests)
      - name: Compile (classes + test-classes)
        run: ./mvnw -B clean test-compile -DskipTests=true

      # Ejecuta PIT (verbose para ver detalles)
      - name: Run PIT
        run: ./mvnw -B org.pitest:pitest-maven:mutationCoverage -Dpit.verbose=true

      # Mostrar logs de target
      - name: Inspect target
        if: always()
        run: ls -R target || true

      # Mostrar carpeta PIT (si existe)
      - name: Inspect PIT reports
        if: always()
        run: ls -R target/pit-reports || echo "pit-reports not found"

      # Subir reporte si existe
      - name: Upload PIT report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pit-report
          path: target/pit-reports/**
          if-no-files-found: warn

  performance:
    name: JMeter Performance Tests
    needs: unit-tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Run JMeter tests
        uses: QAInsights/PerfAction@v3.1
        with:
          test-plan-path: src/test/jmeter/test-plan-performance.jmx
          output-dir: target/jmeter-report

      - name: Upload JMeter HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-report
          path: target/jmeter-report/**
          if-no-files-found: warn
          if-no-files-found: warn


